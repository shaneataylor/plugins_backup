<?xml version="1.0" encoding="UTF-8"?>
<!-- Extend the toolkit's XHTML processing to generate WebHelp output. -->
<project name="net.webassign.webhelp.integrator" default="dita2h5help" basedir=".">
    
    <!-- set default values for plugin build params -->
    <property name="h5help.name" value=""/>
    <property name="h5help.google.cse.id" value=""/>
    <property name="h5help.google.cse.refinement" value=""/>
    <property name="h5help.feedback" value="no"/>                 <!-- add feedback feature (yes or no) -->
    <property name="h5help.prettify.code" value="no"/>            <!-- prettify code examples (yes or no) -->
    <property name="h5help.disqus.shortname" value=""/>
    <property name="h5help.conreftarget.rule" value=""/>
    <property name="h5help.copy.cssroot" value="no"/>
    <property name="h5help.args.hdr" value="${args.hdr}"/>
    <!-- h5help.search and h5help.genindex -->                    <!-- set in set.search.default target  -->
    <property name="h5help.vendorpath" value=""/>
    <property name="h5help.search.configfile" value=""/>
    
    <target name="dita2h5help"
        depends="set.search.default, build-init, preprocess, copy-mathML, dita.map.xhtml,
        copy-css, dita.topics.xhtml, dita.inner.topics.xhtml, 
        dita.outer.topics.xhtml, xhtml2h5help, h5help.gen.index, gen-sitemap, copy-h5help-resources"/>
    
    <target name="set.search.default">
        <if> <!-- set default value for h5help.search based on whether or not a Google CSE is specified -->
            <and>
                <not>
                    <isset property="h5help.search"/>
                </not>
                <not>
                    <length string="${h5help.google.cse.id}" trim="true" length="0" />
                </not>
            </and>
            <then>
                <property name="h5help.search" value="google"/>
                <property name="h5help.genindex" value="false" />
            </then>
            <else>
                <property name="h5help.search" value="internal"/>
                <property name="h5help.genindex" value="true" />
            </else>
        </if>
    </target>
    
    <target name="copy-mathML">
        <copy todir="${dita.temp.dir}${file.separator}mathml" failonerror="false">
            <fileset
                dir="${args.input.dir}${file.separator}mathml"
                includes="**${file.separator}*"/>
        </copy>
    </target>
    
    <target name="h5help.check.conrefs" description="Ensure conref targets adhere to rule specified by h5help.conreftarget.rule">
        <!--<property name="conref_file_list" value="${dita.temp.dir}${file.separator}conref.list" />
        <echo message="Conref list = ${conref_file_list}"></echo>-->
        <xslt basedir="${dita.temp.dir}"
            includesfile="${dita.temp.dir}${file.separator}conref.list" 
            destdir="${dita.temp.dir}"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}conref_rule_checking.xsl"
            filenameparameter="thisconreffer"
            failOnError="false">
            <param name="h5help.conreftarget.rule" expression="${h5help.conreftarget.rule}"></param>
        </xslt>
    </target>
    
    <target name="h5help.gen.index" depends="h5help.gen.empty.index,h5help.gen.search.index"/>
    
    <target name="h5help.gen.search.index" description="Generate a JSON index of the help content." if="${h5help.genindex}">
        <!-- Future: generate & use searchtargets list of topics for which @search != no -->
        <condition property="configfile.found">
            <available file="${h5help.search.configfile}"/>
        </condition>
        <!-- Combine user and default search configs -->
        <xslt in="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}searchconfig.xml"
            out="${dita.temp.dir}${file.separator}searchconfigs.xml"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}init_searchconfigs.xsl"
            failOnError="false">
            <param name="configfile" expression="${h5help.search.configfile}"/>
            <param name="configfilefound" expression="${configfile.found}"/>
        </xslt>
        <!-- Index each topic individually first -->
        <xslt basedir="${dita.temp.dir}"
            includesfile="${dita.temp.dir}${file.separator}fullditatopic.list"
            excludesfile="${dita.temp.dir}${file.separator}resourceonly.list"
            destdir="${dita.temp.dir}"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}stemmer.xsl"
            filenameparameter="thisindextarget"
            failOnError="false" extension=".idx">
            <param name="outext" expression="${args.outext}"/>
            <param name="configfile" expression="${dita.temp.dir}${file.separator}searchconfigs.xml"/>
            
        </xslt>
        <!-- Combine all topic indexes into a single file for further processing -->
        <concat destfile="${dita.temp.dir}${file.separator}allstems.idx">
            <fileset dir="${dita.temp.dir}" includes="*.idx" excludes="allstems.idx"/>
            <header filtering="no"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<indextopics>]]></header>
            <footer filtering="no"><![CDATA[</indextopics>]]></footer>
        </concat>
        <!-- Generate JSON index file -->
        <xslt in="${dita.temp.dir}${file.separator}allstems.idx"
            out="${output.dir}${file.separator}helpindex.json"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}stems2helpindex.xsl"
            failOnError="false"/>
        <!-- Generate JSON topicsummaries file -->
        <xslt in="${dita.temp.dir}${file.separator}allstems.idx"
            out="${output.dir}${file.separator}topicsummaries.json"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}topicsummaries.xsl"
            failOnError="false"/>
    </target>
    
    <target name="h5help.gen.empty.index" description="Generate an empty searchconfigs file if not indexing." unless="${h5help.genindex}">
        <echo append="no" file="${dita.temp.dir}${file.separator}searchconfigs.xml" force="yes">
            <![CDATA[<searchconfig></searchconfig>]]>
        </echo>
    </target>

    <target name="copy-h5help-resources">
        <copy todir="${output.dir}" failonerror="true">
                <fileset
                dir="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}resources"
                includes="**${file.separator}*"/>
                </copy>
        <copy file="${args.input.dir}${file.separator}h5csh.json" todir="${output.dir}" verbose="true" failonerror="false"/>
        <copy file="${output.dir}${file.separator}index.htm" tofile="${output.dir}${file.separator}index.html" verbose="true" failonerror="false"/>
        <!-- make h5params.json -->
        <echo level="info">Creating ${output.dir}${file.separator}h5help${file.separator}h5params.json</echo>
        <xslt in="${dita.temp.dir}${file.separator}searchconfigs.xml"
            out="${output.dir}${file.separator}h5help${file.separator}h5params.json"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}gen_h5params.xsl"
            failOnError="false">
            <param name="toc_file" expression="${args.xhtml.toc}${args.outext}" />
            <param name="help_name" expression="${h5help.name}" />
            <param name="search" expression="${h5help.search}" />
            <param name="google_cse_id" expression="${h5help.google.cse.id}" />
            <param name="google_cse_refinement" expression="${h5help.google.cse.refinement}" />
            <param name="disqus_shortname" expression="${h5help.disqus.shortname}" />
            <param name="feedback" expression="${h5help.feedback}" />
            <param name="prettify_code" expression="${h5help.prettify.code}" />
        </xslt>
        <!-- prepend vendor path to main.js -->
        <echo file="${output.dir}${file.separator}h5help${file.separator}js${file.separator}vendor.js" 
            append="no" force="yes">var h5help = h5help || {};
h5help.vendorpath = "${h5help.vendorpath}";
</echo>
        <concat destfile="${output.dir}${file.separator}h5help${file.separator}js${file.separator}main.js">
            <filelist dir="${output.dir}${file.separator}h5help${file.separator}js"
                files="vendor.js,main-base.js"/>
        </concat>
        
        <antcall target="copy-cssroot"/>
        
    </target>
    
    <target name="copy-cssroot" depends="check-copy-cssroot" if="copy_cssroot">
        <copy todir="${output.dir}${file.separator}${args.csspath}" failonerror="false">
            <fileset dir="${args.cssroot}" includes="**${file.separator}*"/>
        </copy>
    </target>
    
    <target name="check-copy-cssroot">
        <condition property="copy_cssroot">
            <and>
                <istrue value="${h5help.copy.cssroot}"/>
                <isset property="args.cssroot"/>
                <isset property="args.csspath"/>
            </and>
        </condition>
    </target>
    
    <target name="gen-sitemap">
        <!-- note: assumes a flat output file structure -->
        <fileset id="output.files" dir="${output.dir}" includes="*${args.outext}">
            <exclude name="${args.xhtml.toc}${args.outext}"/>
        </fileset>
        <property name="output.files.list" refid="output.files"/>
        <echo file="${output.dir}${file.separator}sitemap.temp">${output.dir}</echo>
        <replaceregexp byline="true" flags="g" file="${output.dir}${file.separator}sitemap.temp">
            <regexp pattern="^.*[\/]([^\/]+)$"/>
            <substitution expression="\1" />
        </replaceregexp>
        <loadfile property="urlpath" srcfile="${output.dir}${file.separator}sitemap.temp"/>
        <property name="baseurl">http://www.webassign.net/manual/${urlpath}/</property>
        <tstamp>
            <format property="lastmod" pattern="yyyy-MM-dd"/>
        </tstamp>
        <property name="replaceexpr"><![CDATA[
<url><loc>${baseurl}\1<\/loc><lastmod>${lastmod}<\/lastmod><changefreq>monthly<\/changefreq><\/url>]]></property>
        
        <echo file="${output.dir}${file.separator}sitemap.temp">${output.files.list}</echo>
        <replaceregexp byline="true" flags="g" file="${output.dir}${file.separator}sitemap.temp">
            <regexp pattern="([^;]*);?"/>
            <substitution expression="${replaceexpr}" />
        </replaceregexp>
        <concat destfile="${output.dir}${file.separator}sitemap.xml" >
            <header><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<urlset
    xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
    http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
    ]]></header>
            <fileset file="${output.dir}${file.separator}sitemap.temp"/>
            <footer><![CDATA[
                </urlset>]]></footer>
        </concat>
        <delete file="${output.dir}${file.separator}sitemap.temp"/>
    </target>

    <target name="xhtml2h5help">
        <!-- First, move output files -->
        <move todir="${output.dir}${file.separator}temp_xhtml" includeemptydirs="false">
            <fileset dir="${output.dir}">
                <include name="*${args.outext}"/>
                <exclude name="${args.xhtml.toc}${args.outext}"/>
            </fileset>
        </move>
        <!-- Process files to HTML5 help framework -->
        <xslt basedir="${output.dir}${file.separator}temp_xhtml" includes="*${args.outext}" 
            destdir="${output.dir}" extension="${args.outext}"
            style="${dita.dir}${file.separator}plugins${file.separator}net.webassign.webhelp${file.separator}xsl${file.separator}xhtml2h5help.xsl"
            failOnError="true">
            <param name="h5help.feedback" expression="${h5help.feedback}"/>
            <param name="h5help.name" expression="${h5help.name}"/>
            <param name="h5help.args.hdr" expression="${h5help.args.hdr}"/>
            <param name="h5help.vendorpath" expression="${h5help.vendorpath}"/>
        </xslt>
        <!-- Clean up temp directory -->
        <delete dir="${output.dir}${file.separator}temp_xhtml"></delete>
    </target>



</project>
